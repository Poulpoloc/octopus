
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionnonassocINleftPLUSEQUAL ID IN LET LPAR NUMBER PLUS RPARexpression : expression PLUS expressionexpression : NUMBER\n                  | IDexpression : LPAR expression RPARexpression : LET ID EQUAL expression IN expression'
    
_lr_action_items = {'NUMBER':([0,4,6,11,13,],[2,2,2,2,2,]),'ID':([0,4,5,6,11,13,],[3,3,8,3,3,3,]),'LPAR':([0,4,6,11,13,],[4,4,4,4,4,]),'LET':([0,4,6,11,13,],[5,5,5,5,5,]),'$end':([1,2,3,9,10,14,],[0,-2,-3,-1,-4,-5,]),'PLUS':([1,2,3,7,9,10,12,14,],[6,-2,-3,6,-1,-4,6,6,]),'RPAR':([2,3,7,9,10,14,],[-2,-3,10,-1,-4,-5,]),'IN':([2,3,9,10,12,14,],[-2,-3,-1,-4,13,-5,]),'EQUAL':([8,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,6,11,13,],[1,7,9,12,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','yacc.py',14),
  ('expression -> NUMBER','expression',1,'p_expression_atom','yacc.py',18),
  ('expression -> ID','expression',1,'p_expression_atom','yacc.py',19),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_embraced','yacc.py',26),
  ('expression -> LET ID EQUAL expression IN expression','expression',6,'p_expression_letin','yacc.py',30),
]
